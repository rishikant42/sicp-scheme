(define (itr-mul a b)                            ;; iterative process
  (define (mul counter result)
    (if (= counter 0)
      result
      (mul (- counter 1) (+ result a))))
  (mul b 0))

(define (rec-mul a b)                            ;; recursive process
  (if (= b 0)
    0
    (+ a (rec-mul a (- b 1)))))

(define (fast-mul a b)
  (cond ((= b 1) a)
        ((= b 0) 0)
        ((= a 0) 0)
        ((even? b) (double (fast-mul a (halve b))))
        (else (+ a (fast-mul a (- b 1))))))



(define (double x)
  (+ x x))

(define (halve x)
  (/ x 2))
