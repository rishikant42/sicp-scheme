(define (cons1 x y)
  (define (despite m)
    (cond ((= m 0) x)
          ((= m 1) y)
          (else (error "Argument not 0 or 1 --CONS" m))))
  despite)

(define (car1 z) (z 0))
(define (cdr1 z) (z 1))

(define (cons2 x y)
  (lambda (m)
    (cond ((= m 0) x)
          ((= m 1) y)
          (else (error "Argument not 0 or 1 --CONS" m)))))

(define (car2 z) (z 0))
(define (cdr2 z) (z 1))

(define (cons3 x y)
  (lambda (m) (m x y)))

(define (car3 z)
  (z (lambda (p q) p)))

(define (cdr3 z)
  (z (lambda (p q) q)))
